package features.rs.resources;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import joist.rs.Link;
import joist.rs.LinkCollection;

@Path("/")
public class ServiceRootResource {

  @GET
  @Produces({ "application/xml" })
  public LinkCollection get() {
    LinkCollection links = new LinkCollection();
    Link link;
    link = new Link();
    link.setName("childs");
    link.setRelativeUrl("/childs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("childFs");
    link.setRelativeUrl("/childFs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("childGs");
    link.setRelativeUrl("/childGs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("codeADomainObjects");
    link.setRelativeUrl("/codeADomainObjects");
    links.getLinks().add(link);
    link = new Link();
    link.setName("grandChilds");
    link.setRelativeUrl("/grandChilds");
    links.getLinks().add(link);
    link = new Link();
    link.setName("historyEntrys");
    link.setRelativeUrl("/historyEntrys");
    links.getLinks().add(link);
    link = new Link();
    link.setName("inheritanceAOwners");
    link.setRelativeUrl("/inheritanceAOwners");
    links.getLinks().add(link);
    link = new Link();
    link.setName("inheritanceASubOnes");
    link.setRelativeUrl("/inheritanceASubOnes");
    links.getLinks().add(link);
    link = new Link();
    link.setName("inheritanceASubTwos");
    link.setRelativeUrl("/inheritanceASubTwos");
    links.getLinks().add(link);
    link = new Link();
    link.setName("inheritanceAThings");
    link.setRelativeUrl("/inheritanceAThings");
    links.getLinks().add(link);
    link = new Link();
    link.setName("inheritanceBBottoms");
    link.setRelativeUrl("/inheritanceBBottoms");
    links.getLinks().add(link);
    link = new Link();
    link.setName("inheritanceBRootChilds");
    link.setRelativeUrl("/inheritanceBRootChilds");
    links.getLinks().add(link);
    link = new Link();
    link.setName("inheritanceCFoo1s");
    link.setRelativeUrl("/inheritanceCFoo1s");
    links.getLinks().add(link);
    link = new Link();
    link.setName("inheritanceCFoo2s");
    link.setRelativeUrl("/inheritanceCFoo2s");
    links.getLinks().add(link);
    link = new Link();
    link.setName("manyToManyABars");
    link.setRelativeUrl("/manyToManyABars");
    links.getLinks().add(link);
    link = new Link();
    link.setName("manyToManyAFoos");
    link.setRelativeUrl("/manyToManyAFoos");
    links.getLinks().add(link);
    link = new Link();
    link.setName("manyToManyAFooToBars");
    link.setRelativeUrl("/manyToManyAFooToBars");
    links.getLinks().add(link);
    link = new Link();
    link.setName("manyToManyBBars");
    link.setRelativeUrl("/manyToManyBBars");
    links.getLinks().add(link);
    link = new Link();
    link.setName("manyToManyBFoos");
    link.setRelativeUrl("/manyToManyBFoos");
    links.getLinks().add(link);
    link = new Link();
    link.setName("manyToManyBFooToBars");
    link.setRelativeUrl("/manyToManyBFooToBars");
    links.getLinks().add(link);
    link = new Link();
    link.setName("oneToOneABars");
    link.setRelativeUrl("/oneToOneABars");
    links.getLinks().add(link);
    link = new Link();
    link.setName("oneToOneAFoos");
    link.setRelativeUrl("/oneToOneAFoos");
    links.getLinks().add(link);
    link = new Link();
    link.setName("oneToOneBBars");
    link.setRelativeUrl("/oneToOneBBars");
    links.getLinks().add(link);
    link = new Link();
    link.setName("oneToOneBFoos");
    link.setRelativeUrl("/oneToOneBFoos");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parents");
    link.setRelativeUrl("/parents");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentBChildBars");
    link.setRelativeUrl("/parentBChildBars");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentBChildFoos");
    link.setRelativeUrl("/parentBChildFoos");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentBParents");
    link.setRelativeUrl("/parentBParents");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentCBars");
    link.setRelativeUrl("/parentCBars");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentCFoos");
    link.setRelativeUrl("/parentCFoos");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentDs");
    link.setRelativeUrl("/parentDs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentDChildAs");
    link.setRelativeUrl("/parentDChildAs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentDChildBs");
    link.setRelativeUrl("/parentDChildBs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentDChildCs");
    link.setRelativeUrl("/parentDChildCs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentDToChildCs");
    link.setRelativeUrl("/parentDToChildCs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentEs");
    link.setRelativeUrl("/parentEs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentFs");
    link.setRelativeUrl("/parentFs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("parentGs");
    link.setRelativeUrl("/parentGs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("primitivess");
    link.setRelativeUrl("/primitivess");
    links.getLinks().add(link);
    link = new Link();
    link.setName("primitivesBs");
    link.setRelativeUrl("/primitivesBs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("primitivesCs");
    link.setRelativeUrl("/primitivesCs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("userTypesAFoos");
    link.setRelativeUrl("/userTypesAFoos");
    links.getLinks().add(link);
    link = new Link();
    link.setName("validationAFoos");
    link.setRelativeUrl("/validationAFoos");
    links.getLinks().add(link);
    link = new Link();
    link.setName("valuesAs");
    link.setRelativeUrl("/valuesAs");
    links.getLinks().add(link);
    link = new Link();
    link.setName("valuesBs");
    link.setRelativeUrl("/valuesBs");
    links.getLinks().add(link);
    return links;
  }

}
